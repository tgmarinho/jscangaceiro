{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","text","console","log","stack","message","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals"],"mappings":";;;;;;AAASA,uB,kBAAAA,W;AAAaC,6B,kBAAAA,iB;AAAmBC,sB,kBAAAA,U;;AAChCC,2B,cAAAA,e;AAAiBC,wB,cAAAA,Y;AAAcC,oB,cAAAA,Q;AAAUC,iC,cAAAA,qB;AAAuBC,yB,cAAAA,a;;AAChEC,4B,gBAAAA,gB;AAAkBC,gB,gBAAAA,I;;;AACpB,kBAAMC,oBAAN,CAA2B;;AAE9BC,8BAAc;;AAEV,0BAAMC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAV;AACA,yBAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB;AACA,yBAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,yBAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;;AAEA,yBAAKO,YAAL,GAAoB,IAAIV,IAAJ,CAChB,IAAIT,WAAJ,EADgB,EAEhB,IAAIG,eAAJ,CAAoB,cAApB,CAFgB,EAGhB,UAHgB,EAGJ,SAHI,CAApB;;AAKA,yBAAKiB,SAAL,GAAiB,IAAIX,IAAJ,CACb,IAAIJ,QAAJ,EADa,EAEb,IAAID,YAAJ,CAAiB,eAAjB,CAFa,EAGb,OAHa,CAAjB;;AAMA,yBAAKiB,QAAL,GAAgB,IAAIpB,iBAAJ,EAAhB;;AAGA,yBAAKqB,KAAL;AAGH;;AAEDA,wBAAQ;AACJd,uCACKe,IADL,CACUC,OAAOA,IAAIC,UAAJ,EADjB,EAEKF,IAFL,CAEUG,eACFA,YAAYC,OAAZ,CAAoBC,cAChB,KAAKT,YAAL,CAAkBU,QAAlB,CAA2BD,UAA3B,CADJ,CAHR,EAKKE,KALL,CAKWC,OAAO,KAAKX,SAAL,CAAeY,KAAf,GAAuBD,GALzC;AAMH;;AAEDF,yBAASI,KAAT,EAAgB;;AAEZ,wBAAI;AACAA,8BAAMC,cAAN;;AAEA,8BAAMN,aAAa,KAAKO,eAAL,EAAnB;;AAEA3B,2CACKe,IADL,CACUC,OAAOA,IAAIK,QAAJ,CAAaD,UAAb,CADjB,EAEKL,IAFL,CAEU,MAAM;AACR;AACA,iCAAKJ,YAAL,CAAkBU,QAAlB,CAA2B,KAAKM,eAAL,EAA3B;AACA,iCAAKf,SAAL,CAAeY,KAAf,GAAuB,oCAAvB;AACA,iCAAKI,gBAAL;AACH,yBAPL,EAQKN,KARL,CAQWC,OAAO,KAAKX,SAAL,CAAeiB,IAAf,GAAsBN,GARxC;AAUH,qBAfD,CAeE,OAAOA,GAAP,EAAY;AACVO,gCAAQC,GAAR,CAAYR,GAAZ;AACAO,gCAAQC,GAAR,CAAYR,IAAIS,KAAhB;;AAEA,4BAAIT,eAAezB,qBAAnB,EAA0C;AACtC,iCAAKc,SAAL,CAAeY,KAAf,GAAuBD,IAAIU,OAA3B;AACH,yBAFD,MAEO;AACH,iCAAKrB,SAAL,CAAeY,KAAf,GAAuB,gEAAvB;AACH;AACJ;AAGJ;;AAGDI,mCAAmB;;AAEf,yBAAKpB,UAAL,CAAgB0B,KAAhB,GAAwB,EAAxB;AACA,yBAAKzB,gBAAL,CAAsByB,KAAtB,GAA8B,CAA9B;AACA,yBAAKxB,WAAL,CAAiBwB,KAAjB,GAAyB,GAAzB;AACA,yBAAK1B,UAAL,CAAgB2B,KAAhB;AAEH;;AAEDR,kCAAkB;AACd,2BAAO,IAAIjC,UAAJ,CACHK,cAAcqC,QAAd,CAAuB,KAAK5B,UAAL,CAAgB0B,KAAvC,CADG,EAEHG,SAAS,KAAK5B,gBAAL,CAAsByB,KAA/B,CAFG,EAGHI,WAAW,KAAK5B,WAAL,CAAiBwB,KAA5B,CAHG,CAAP;AAMH;;AAEDK,wBAAQ;AACJvC,uCACKe,IADL,CACUC,OAAOA,IAAIwB,UAAJ,EADjB,EAEKzB,IAFL,CAEU,MAAM;AACR,6BAAKJ,YAAL,CAAkB8B,OAAlB;AACA,6BAAK7B,SAAL,CAAeY,KAAf,GAAuB,kCAAvB;AACH,qBALL,EAMKF,KANL,CAMWC,OAAO,KAAKX,SAAL,CAAeY,KAAf,GAAuBD,GANzC;AAQH;;AAEDmB,qCAAqB;;AAEjB,yBAAK7B,QAAL,CACK8B,yBADL,GAEK5B,IAFL,CAEUG,eAAe;;AAEjBA,oCACA0B,MADA,CACOC,kBAAkB,CAAC,KAAKlC,YAAL,CAAkBmC,SAAlB,GAA8BC,IAA9B,CAAmCC,uBACrDH,eAAeI,MAAf,CAAsBD,mBAAtB,CADkB,CAD1B,EAGK7B,OAHL,CAGaC,cAAc,KAAKT,YAAL,CAAkBU,QAAlB,CAA2BD,UAA3B,CAH3B;;AAKA,6BAAKR,SAAL,CAAeY,KAAf,GAAuB,+CAAvB;AACH,qBAVL,EAWKF,KAXL,CAWWC,OAAO,KAAKX,SAAL,CAAeY,KAAf,GAAuBD,GAXzC;AAYH;;AAhH6B","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind } from '../util/index.js';\nexport class NegociacaoController {\n\n    constructor() {\n\n        const $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia');\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );\n\n        this._service = new NegociacaoService();\n\n\n        this._init();\n\n\n    }\n\n    _init() {\n        getNegociacaoDao()\n            .then(dao => dao.listaTodos())\n            .then(negociacoes =>\n                negociacoes.forEach(negociacao =>\n                    this._negociacoes.adiciona(negociacao)))\n            .catch(err => this._mensagem.texto = err);\n    }\n\n    adiciona(event) {\n\n        try {\n            event.preventDefault();\n\n            const negociacao = this._criaNegociacao();\n\n            getNegociacaoDao()\n                .then(dao => dao.adiciona(negociacao))\n                .then(() => {\n                    // só tentará incluir na tabela se conseguiu antes incluir no banco\n                    this._negociacoes.adiciona(this._criaNegociacao());\n                    this._mensagem.texto = 'Negociação adicionada com sucesso!';\n                    this._limpaFormulario();\n                })\n                .catch(err => this._mensagem.text = err);\n\n        } catch (err) {\n            console.log(err);\n            console.log(err.stack);\n\n            if (err instanceof DataInvalidaException) {\n                this._mensagem.texto = err.message;\n            } else {\n                this._mensagem.texto = 'Um erro não esperado aconteceu. Entre em contato com o suporte';\n            }\n        }\n\n\n    }\n\n\n    _limpaFormulario() {\n\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0\n        this._inputData.focus();\n\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n\n    }\n\n    apaga() {\n        getNegociacaoDao()\n            .then(dao => dao.apagaTodos())\n            .then(() => {\n                this._negociacoes.esvazia();\n                this._mensagem.texto = 'Negociações apagadas com sucesso';\n            })\n            .catch(err => this._mensagem.texto = err);\n\n    }\n\n    importaNegociacoes() {\n\n        this._service\n            .obtemNegociacoesDoPeriodo()\n            .then(negociacoes => {\n\n                negociacoes.\n                filter(novaNegociacao => !this._negociacoes.paraArray().some(negociacaoExistente =>\n                        novaNegociacao.equals(negociacaoExistente)))\n                    .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n\n                this._mensagem.texto = 'Negociações do período importadas com sucesso';\n            })\n            .catch(err => this._mensagem.texto = err);\n    }\n\n\n\n\n}"]}