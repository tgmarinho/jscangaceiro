{"version":3,"sources":["../../app-src/controllers/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","debounce","controller","NegociacaoController","bindEvent","constructor","inputData","inputQuantidade","inputValor","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","dao","negociacoes","listaTodos","forEach","adiciona","negociacao","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia","importaNegociacoes","obtemNegociacoesDoPeriodo","console","log","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao } from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind, getExceptionMessage, debounce, controller } from '../util/index.js';\n\n@controller('#data', '#quantidade', '#valor')\nexport class NegociacaoController {\n\n    constructor(inputData, inputQuantidade, inputValor) {\n\n\n        this._inputData = inputData;\n        this._inputQuantidade = inputQuantidade;\n        this._inputValor = inputValor;\n\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia');\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );\n\n        this._service = new NegociacaoService();\n\n\n        this._init();\n\n\n    }\n\n    async _init() {\n        //Lembre-se de que só podemos utilizar a sintaxe await para uma Promise dentro de uma função async; caso contrário, receberemos a mensagem de erro \"await is a reserved word\".\n        try {\n            const dao = await getNegociacaoDao();\n            const negociacoes = await dao.listaTodos();\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n\n    }\n    @bindEvent('submit', '.form')\n    @debounce()\n    async adiciona(event) {\n\n        try {\n\n            event.preventDefault();\n\n            const negociacao = this._criaNegociacao();\n\n            const dao = await getNegociacaoDao();\n            await dao.adiciona(negociacao);\n\n            this._negociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociação adicionada com sucesso!';\n            this._limpaFormulario();\n\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n\n\n    }\n\n\n    _limpaFormulario() {\n\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0\n        this._inputData.focus();\n\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n\n    }\n\n    async apaga() {\n\n        try {\n            const dao = await getNegociacaoDao();\n            await dao.apagaTodos();\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n\n    }\n\n    @bindEvent('click', '#botao-importa')\n    @debounce(1500)\n    async importaNegociacoes() {\n\n        try {\n\n            const negociacoes = await this._service.obtemNegociacoesDoPeriodo();\n            console.log(negociacoes);\n            negociacoes.\n            filter(novaNegociacao => !this._negociacoes.paraArray().some(negociacaoExistente =>\n                    novaNegociacao.equals(negociacaoExistente)))\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n            this._mensagem.texto = 'Negociações do período importadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n\n    }\n\n\n\n\n}"]}