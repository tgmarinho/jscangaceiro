{"version":3,"sources":["../../../app-src/util/decorators/Debounce.js"],"names":["debounce","millissegundos","target","key","descriptor","metodoOriginal","value","timer","args","event","preventDefault","clearTimeout","setTimeout","apply"],"mappings":";;;AAAO,aAASA,QAAT,CAAkBC,iBAAiB,GAAnC,EAAwC;AAC3C,eAAO,UAASC,MAAT,EAAiBC,GAAjB,EAAsBC,UAAtB,EAAkC;;AAErC,kBAAMC,iBAAiBD,WAAWE,KAAlC;;AAEA,gBAAIC,QAAQ,CAAZ;AACAH,uBAAWE,KAAX,GAAmB,UAAS,GAAGE,IAAZ,EAAkB;;AAEjC,oBAAIC,KAAJ,EAAWA,MAAMC,cAAN;;AAEXC,6BAAaJ,KAAb;AACA;AACAA,wBAAQK,WAAW,MAAMP,eAAeQ,KAAf,CAAqB,IAArB,EAA2BL,IAA3B,CAAjB,EAAmDP,cAAnD,CAAR;AACH,aAPD;;AASA,mBAAOG,UAAP;AACH,SAfD;AAgBH;;wBAjBeJ,Q","file":"Debounce.js","sourcesContent":["export function debounce(millissegundos = 500) {\n    return function(target, key, descriptor) {\n\n        const metodoOriginal = descriptor.value;\n\n        let timer = 0;\n        descriptor.value = function(...args) {\n\n            if (event) event.preventDefault();\n\n            clearTimeout(timer);\n            // chama metodoOriginal depois de x milisegundos!\n            timer = setTimeout(() => metodoOriginal.apply(this, args), millissegundos);\n        }\n\n        return descriptor;\n    }\n}"]}