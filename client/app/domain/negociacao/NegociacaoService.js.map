{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","ApplicationException","NegociacaoService","constructor","_http","obtemNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","obtemNegociacoesDaSemanaAnterior","obtemNegociacoesDaSemanaRetrasada","obtemNegociacoesDoPeriodo","periodo","Promise","all","reduce","novoArray","item","concat","sort","a","b","getTime","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;AACAC,gC,+BAAAA,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAEIC,iB,GAAN,MAAMA,iBAAN,CAAwB;;AAG3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIL,WAAJ,EAAb;AACH;AACDM,2CAA2B;;AAEvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAAU,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAApB;;AAEA,+BAAON,WAAP;AACH,qBAPF,EAQCO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,uCAAzB,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDgB,mDAAmC;;AAE/B,2BAAO,KAAKb,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAAU,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CAApB,CAApB;;AAEA,+BAAON,WAAP;AACH,qBAPF,EAQCO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,0DAAzB,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDiB,oDAAoC;;AAEhC,2BAAO,KAAKd,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAGCC,SAAS;;AAEL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIX,UAAJ,CAAe,IAAIY,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;;AAGA,+BAAON,WAAP;AACH,qBATF,EAUCO,OAAO;AACH,8BAAM,IAAIf,oBAAJ,CAAyB,2DAAzB,CAAN;AACH,qBAZF,CAAP;AAcH;;AAGKkB,yCAAN,GAAkC;AAAA;;AAAA;;AAE9B,4BAAI;;AAEA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKjB,wBAAL,EAD4B,EAE5B,MAAKY,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;;AAMA,mCAAOE,QACFG,MADE,CACK,UAACC,SAAD,EAAYC,IAAZ;AAAA,uCAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAArB;AAAA,6BADL,EACkD,EADlD,EAEFE,IAFE,CAEG,UAACC,CAAD,EAAIC,CAAJ;AAAA,uCAAUA,EAAEhB,IAAF,CAAOiB,OAAP,KAAmBF,EAAEf,IAAF,CAAOiB,OAAP,EAA7B;AAAA,6BAFH,CAAP;AAIH,yBAZD,CAYE,OAAOd,GAAP,EAAY;AACVe,oCAAQC,GAAR,CAAYhB,GAAZ;AACA,kCAAM,IAAIf,oBAAJ,CAAyB,kDAAzB,CAAN;AACH;AAjB6B;AAoBjC;;AA7E0B,a","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\nimport { ApplicationException } from '../../util/ApplicationException.js';\n\nexport class NegociacaoService {\n\n\n    constructor() {\n        this._http = new HttpService();\n    }\n    obtemNegociacoesDaSemana() {\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(\n                dados => {\n                    const negociacoes = dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\n                    return negociacoes;\n                },\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações');\n                }\n            );\n    }\n\n    obtemNegociacoesDaSemanaAnterior() {\n\n        return this._http\n            .get('negociacoes/anterior')\n            .then(\n                dados => {\n                    const negociacoes = dados.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\n                    return negociacoes;\n                },\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações da semana anterior');\n                }\n            );\n    }\n\n    obtemNegociacoesDaSemanaRetrasada() {\n\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(\n                dados => {\n\n                    const negociacoes = dados.map(objeto =>\n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n\n                    return negociacoes;\n                },\n                err => {\n                    throw new ApplicationException('Não foi possível obter as negociações da semana retrasada');\n                }\n            );\n    }\n\n\n    async obtemNegociacoesDoPeriodo() {\n\n        try {\n\n            let periodo = await Promise.all([\n                this.obtemNegociacoesDaSemana(),\n                this.obtemNegociacoesDaSemanaAnterior(),\n                this.obtemNegociacoesDaSemanaRetrasada()\n            ]);\n\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n\n        } catch (err) {\n            console.log(err);\n            throw new ApplicationException('Não foi possível obter as negociações do período')\n        }\n\n\n    }\n\n\n}"]}