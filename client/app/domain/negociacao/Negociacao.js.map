{"version":3,"sources":["../../../app-src/domain/negociacao/Negociacao.js"],"names":["Negociacao","constructor","_data","_quantidade","_valor","Object","assign","Date","getTime","freeze","volume","data","quantidade","valor","equals","negociacao","JSON","stringify"],"mappings":";;;;;;AAAO,kBAAMA,UAAN,CAAiB;;AAEpB;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACAC,4BAAYC,KAAZ,EAAmBC,WAAnB,EAAgCC,MAAhC,EAAwC;AACpCC,2BAAOC,MAAP,CAAc,IAAd,EAAoB,EAAEH,WAAF,EAAeC,MAAf,EAApB;AACA,yBAAKF,KAAL,GAAa,IAAIK,IAAJ,CAASL,MAAMM,OAAN,EAAT,CAAb;AACAH,2BAAOI,MAAP,CAAc,IAAd;AACH;;AAID,oBAAIC,MAAJ,GAAa;AACT,2BAAO,KAAKP,WAAL,GAAmB,KAAKC,MAA/B;AACH;;AAED,oBAAIO,IAAJ,GAAW;AACP,2BAAO,KAAKT,KAAZ;AACH;;AAED,oBAAIU,UAAJ,GAAiB;AACb,2BAAO,KAAKT,WAAZ;AACH;;AAED,oBAAIU,KAAJ,GAAY;AACR,2BAAO,KAAKT,MAAZ;AACH;;AAIDU,uBAAOC,UAAP,EAAmB;AACf,2BAAOC,KAAKC,SAAL,CAAe,IAAf,KAAwBD,KAAKC,SAAL,CAAeF,UAAf,CAA/B;AACH;;AArDmB","file":"Negociacao.js","sourcesContent":["export class Negociacao {\n\n    /**\n     * com _ antes do nome da variável indico por conveção que o\n     * atributo não pode ser acessado explicitamente.\n     * Se for necessário acessar utilize um método de acesso getAnything();\n     * \n     */\n\n    // construtor com parametros padrões e congalando o objeto para tornar imuatavel\n    //  constructor(data, quantidade, valor) {\n    //     this._data = new Date(data.getTime()); // Solução para deixar Data imutável, isto é se alguem passar uma referencia na classe ciente não vai alterar o valor\n    //     this._quantidade = quantidade;\n    //     this._valor = valor;\n    //     Object.freeze(this); // tornando o objeto imutável\n    // }\n\n    // usando object.assign() para fazer copias de objeto e guardar no this.\n    // constructor(data, quantidade, valor) {\n    //     Object.assign(this, {_data : new Date(data.getTime()), _quantidade : quantidade, _valor : valor});\n    //     Object.freeze(this);\n    // }\n\n\n    // ES2016(ES6) usando {} para criação de objetos com Object.assign()\n    constructor(_data, _quantidade, _valor) {\n        Object.assign(this, { _quantidade, _valor });\n        this._data = new Date(_data.getTime());\n        Object.freeze(this);\n    }\n\n\n\n    get volume() {\n        return this._quantidade * this._valor;\n    }\n\n    get data() {\n        return this._data;\n    }\n\n    get quantidade() {\n        return this._quantidade;\n    }\n\n    get valor() {\n        return this._valor;\n    }\n\n\n\n    equals(negociacao) {\n        return JSON.stringify(this) == JSON.stringify(negociacao);\n    }\n\n\n}"]}